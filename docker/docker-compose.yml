version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: talyerstudio-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: talyerstudio_customers
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - talyerstudio-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: talyerstudio-redis
    ports:
      - "6379:6379"
    networks:
      - talyerstudio-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: talyerstudio-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - talyerstudio-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  customer-service:
    build:
      context: ../src
      dockerfile: Services/TalyerStudio.Customer/TalyerStudio.Customer.API/Dockerfile
    container_name: talyerstudio-customer-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=talyerstudio_customers;Username=postgres;Password=postgres
      - Kestrel__Endpoints__Http__Url=http://+:5180
      - Kestrel__Endpoints__Http__Protocols=Http1AndHttp2
      - Kestrel__Endpoints__Grpc__Url=http://+:5182
      - Kestrel__Endpoints__Grpc__Protocols=Http2
    ports:
      - "5180:5180"
      - "5182:5182"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - talyerstudio-network

  vehicle-service:
    build:
      context: ../src
      dockerfile: Services/TalyerStudio.Vehicle/TalyerStudio.Vehicle.API/Dockerfile
    container_name: talyerstudio-vehicle-service
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5190
    ports:
      - "5190:5190"
    depends_on:
      - customer-service
    networks:
      - talyerstudio-network

volumes:
  postgres_data:

networks:
  talyerstudio-network:
    driver: bridge
